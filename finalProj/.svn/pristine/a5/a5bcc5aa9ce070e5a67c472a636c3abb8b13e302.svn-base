package kr.or.ddit.mem.main;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.SmsVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/mem")
@Controller
public class MemMainController {

	@Inject
	MemMainService memMainService;


	// 입주민 메인페이지
	@GetMapping("/main")
	public String memMain() {
		log.info("memMain : 입주민 메인페이지");
		return "mem/mem_main";
	}

	// 아파트 소개 - 단지정보
	@GetMapping("/intro/aptinfo")
	public String aptInfo() {
		log.info("aptInfo");
		return "mem/mem_intro_aptinfo";
	}

	// 아파트 소개 - 평형정보
	@GetMapping("/intro/hpprinfo")
	public String HouseSupplyAreaInfo() {
		log.info("supplyAreaInfo");
		return "mem/mem_intro_house_supply_area_info";
	}

	// 아파트 소개 - 관리사무소
	@GetMapping("/intro/officeinfo")
	public String officeInfo() {
		log.info("officeinfo");
		return "mem/mem_intro_office_info";
	}

	// 아파트 소개 - 부동산정보
	@GetMapping("/intro/estateinfo")
	public String estateInfo() {
		log.info("estateInfo");
		return "mem/mem_intro_estate_info";
	}

	// 공지사항
	@GetMapping("/ntcbbs")
	public String noticeBoard() {
		log.info("noticeBoard");
		return "mem/mem_notice_board";
	}

	// 생활편의서비스 - 헬스장
	@GetMapping("/life/gym")
	public String gym() {
		log.info("gym");
		return "mem/mem_life_gym";
	}

	// 생활편의서비스 - 수영장
	@GetMapping("/life/pool")
	public String pool() {
		log.info("pool");
		return "mem/mem_life_pool";
	}

	// 생활편의서비스 - 스크린골프장
	@GetMapping("/life/glfpr")
	public String golfPracticeRange() {
		log.info("golfPracticeRange");
		return "mem/mem_life_golf_practive_range";
	}

	// 생활편의서비스 - 독서실
	@GetMapping("/life/readingroom")
	public String readingRoom() {
		log.info("readingRoom");
		return "mem/mem_life_readingroom";
	}

	// 커뮤니티 - 민원게시판
	@GetMapping("/cmnt/cvplbbs")
	public String civilAppealBoard() {
		log.info("civilAppealBoard");
		return "mem/mem_cmnt_civilappeal_board";
	}

	// 전자투표 - 진행 중 투표
	@GetMapping("/vote/inprogrsvote")
	public String inProgressVote() {
		log.info("inProgressVote");
		return "mem/mem_vote_in_progress_vote";
	}

	// 전자투표 - 투표 목록
	@GetMapping("/vote/votelist")
	public String voteList() {
		log.info("voteList");
		return "mem/mem_vote_list";
	}

	// 입찰공고
	@GetMapping("/bid/bidntcbbs")
	public String bidNoticeBoard() {
		log.info("bidNoticeBoard");
		return "mem/mem_bid_notice_board";
	}





	@ResponseBody
	@PostMapping("/onlineUserDetail")
	public List<MemberVO> onlineUserDetail(@RequestBody String data) {

		log.info("onlineUserDetail ===" + data);

		//이상하게 데이터 뒤에 =가 붙어서 온다... 아무리 찾아도 어딘지 모르겠다..
		data = data.replaceAll("=", "");
		data = data.replaceAll("\"", "");
		String[] users = data.split(",");

		List<MemberVO> onlineMemberVOList = new ArrayList();
		for (int i = 0; i< users.length; i++) {
			String user = users[i].trim();
			log.info("onlineMemberVOList"+user);
			MemberVO memberVO = new MemberVO();
			memberVO.setMemId(user);
			memberVO = this.memMainService.detailMember(memberVO);
			onlineMemberVOList.add(memberVO);
		}
		log.info("onlineUserDetail onlineMemberVOList"+onlineMemberVOList);

		return onlineMemberVOList;
	}

	@ResponseBody
	@PostMapping("/chatList")
	public List<SmsVO> chatList(@RequestBody String data){
		//최근 대화내용 가져오는 ajax 컨트롤러
		log.info("chatList" + data);

		return null;

	}
}

































