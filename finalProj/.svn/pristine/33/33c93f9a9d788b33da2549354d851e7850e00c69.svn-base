package kr.or.ddit.emp.email.trash;

import java.security.Principal;
import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.vo.EmailVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/emp/mail/trash")
@Controller
public class TrashMailController {

	@Inject
	TrashMailService emailService;

	// 메일
	@GetMapping("")
	public String mailInbox(Principal principal, Model model) {
		log.info("mailInbox");
		String empId = principal.getName();
		String email =  empId.toLowerCase() + "@dorandoran.com";

		List<EmailVO> data = this.emailService.selectEmailSendList(email);
		log.info("mailInbox"+ data);
		model.addAttribute("emailData", data);
		return "emp/emp_mail_trash";
	}



	@ResponseBody
	@PostMapping("/delEmailList")
	public int delEmailList(@RequestBody String[] checkMailList) {
		log.info("readEmailList");
		List<String> mailList = new ArrayList<String>();
		for (String checkMail : checkMailList) {
			log.info("emailList"+checkMail);
			mailList.add(checkMail);
		}
		return this.emailService.delUpdateEmail(mailList);
	}

	@ResponseBody
	@PostMapping("/favoritesMail")
	public int favoritesMail(@RequestBody EmailVO emlId) {
		log.info("favoritesMail");
		log.info("favoritesMail"+emlId);

		return this.emailService.favoriteUpdateEmail(emlId);
	}

	@ResponseBody
	@PostMapping("/favoritesClear")
	public int favoritesClear(@RequestBody EmailVO emlId) {
		log.info("favoritesMail");
		log.info("favoritesMail"+emlId);

		return this.emailService.favoritesClear(emlId);
	}

}
